{"version":3,"sources":["nodes/Group.tsx","utils/GraphEvents.tsx","utils/Util.tsx","configs/ConfigNode.tsx","configs/ConfigGraph.tsx","configs/ConfigEdge.tsx","configs/ConfigGroup.tsx","configs/ConfigReuse.tsx","configs/ConfigPanel.tsx","App.tsx","index.tsx"],"names":["Group","collapsed","expandSize","this","toggleCollapse","target","attr","d","getSize","resize","width","height","Node","config","markup","tagName","selector","children","attrs","fill","ports","groups","top","circle","r","magnet","stroke","strokeWidth","position","left","right","bottom","items","id","group","body","refWidth","refHeight","buttonGroup","refX","refY","button","rx","ry","cursor","event","buttonSign","label","fontSzie","text","expand","node","parent","getParent","isNode","originSize","originPosition","getPosition","x","y","cornerX","cornerY","hasChange","bbox","getBBox","inflate","corner","getCorner","isCollapsed","setPosition","setSize","clickEdge","graph","child","edge","unselect","getCells","select","setState","editType","getLabels","length","toString","edgePanel","relationText","clickNode","groupPanel","subrequirement","getAttrByPath","shape","reusePanel","subqueryText","nodePanel","filterText","showText","getSelectedCell","cells","getSelectedCells","message","error","autoJustSizeOfSubRequirement","title","length1","getLengthOfStr","length2","curHeight","split","str","result","forEach","element","autoJustSizeOfSubQuery","content","show","length3","newWidth","Math","max","line1","line2","newHeight","marginTop","setAttrByPath","autoJustSizeOfReuse","showOrHidePorts","document","getElementById","querySelectorAll","i","len","style","visibility","addCellToGroup","curCell","console","log","hasParent","childs","getChilds","temp","getChildren","test","push","cell","isChild","groupPosition","getProp","groupWidth","groupHeight","curPosition","curWidth","addChild","toBack","createGroup","rect","fontFamily","fontSize","getPortIdClockwise","sourcePortId","Error","getPortIdAnticlockwise","createNode","rank","wordSpacing","letterSpacing","name","createReuseNode","Graph","registerNode","pointerEvents","textAnchor","textDecoration","TabPane","Tabs","Item","Form","TextArea","Input","ConfigNode","state","componentWillUnmount","callback","onChangeSubQuery","e","value","onChangeFilter","onChangeShow","c","props","onRef","defaultActiveKey","tab","key","padding","orientation","orientationMargin","rows","autoFocus","onChange","placeholder","React","Component","ConfigGraph","draw","json","textContent","fromJSON","JSON","parse","that","uploadJSON","beforeUpload","file","reader","FileReader","readAsText","onload","success","icon","UploadOutlined","ConfigEdge","onChangeRelation","setLabels","ConfigGroup","onChangeSubRequirement","ConfigReuse","ConfigPanel","graphPanel","onBindNodePanel","setParent","onBindEdgePanel","onBindGraphPanel","onBindGroupPanel","onBindReusePanel","className","Toolbar","ToolGroup","Stencil","Addon","SourceAntiClockwise","viewBox","version","xmlns","transform","SourceAntiClockwiseIcon","Icon","component","SourceClockwise","fontWeight","SourceClockwiseIcon","TargetAntiClockwise","TargetAntiClockwiseIcon","TargetClockwise","TargetClockwiseIcon","App","container","stencilContainer","registerSider","slider","stencilGraphWidth","floor","window","innerWidth","stencilGraphHeight","stencilGraphPadding","layoutOptions","columns","marginY","marginX","dx","dy","center","rowHeight","columnWidth","collapsable","getDropNode","draggingNode","options","dropNode","clone","setZIndex","getDragNode","cleanClipboard","cleanHistory","appendChild","component1","component2","component3","load","refContainer","refStencil","onClickUndo","undo","onClickRedo","redo","onClickZoomIn","zoom","onClickZoomOut","onClickFront","toFront","onClickBack","onClickDelete","removeCells","copyCells","onClickCopy","Edge","copy","info","onClickPaste","isClipboardEmpty","curY","curYa","paste","offset","setAttrs","cleanSelection","onClickAdjust","newTopLeftX","newTopLeftY","newBottomRightX","newBottomRightY","topLeft","bottomRight","onClickToJPG","vb","getContentBBox","vbr","Rectangle","create","toSVG","dataUri","DataUri","downloadDataUri","svgToDataUrl","copyStyles","onClickToJSON","blob","Blob","stringify","toJSON","type","downloadBlob","onClickCenter","zoomToFit","maxScale","centerContent","onClickGetClockwisePortOfSourceNode","sourceNode","getSourceNode","targetPortId","getSourcePortId","setSource","port","onClickGetClockwisePortOfTargetNode","getTargetNode","getTargetPortId","setTarget","onClickGetAntiClockwisePortOfSourceNode","onClickGetAntiClockwisePortOfTargetNode","bindChild","keyboard","enabled","history","resizing","allowReverse","clipboard","useLocalStorage","connecting","snap","highlight","allowBlank","allowLoop","allowEdge","allowMulti","allowNode","allowPort","highlighting","embedding","args","snapline","sharp","selecting","scroller","pageVisible","pageBreak","pannable","bindKey","hidePorts","on","pref","collapse","hide","innerHeight","ref","hoverEffect","size","tooltip","CopyOutlined","onClick","SnippetsOutlined","DeleteOutlined","UndoOutlined","RedoOutlined","VerticalAlignTopOutlined","VerticalAlignBottomOutlined","ZoomInOutlined","ZoomOutOutlined","CompressOutlined","ShrinkOutlined","FileOutlined","FileImageOutlined","ReactDOM","render"],"mappings":"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","file":"static/js/main.7eef5927.chunk.js","sourcesContent":["import { Node } from '@antv/x6'\n\nexport class Group extends Node {\n  private collapsed: boolean = false\n  private expandSize: { width: number; height: number }\n\n\n  protected postprocess() {\n    this.toggleCollapse(false)\n  }\n\n  isCollapsed() {\n    return this.collapsed\n  }\n\n\n  toggleCollapse(collapsed?: boolean) {\n    const target = collapsed == null ? !this.collapsed : collapsed\n    if (target) {\n      this.attr('buttonSign', { d: 'M 1 5 9 5 M 5 1 5 9' })\n      this.expandSize = this.getSize()\n      this.resize(190, 32)\n    } else {\n      this.attr('buttonSign', { d: 'M 2 5 8 5' })\n      if (this.expandSize) {\n        this.resize(this.expandSize.width, this.expandSize.height)\n      }\n    }\n    this.collapsed = target\n  }\n}\n\nGroup.config({\n  markup: [\n    {\n      tagName: 'rect',\n      selector: 'body',\n    },\n    {\n      tagName: 'text',\n      selector: 'label',\n    },\n    {\n      tagName: 'g',\n      selector: 'buttonGroup',\n      children: [\n        {\n          tagName: 'rect',\n          selector: 'button',\n          attrs: {\n            'pointer-events': 'visiblePainted',\n          },\n        },\n        {\n          tagName: 'path',\n          selector: 'buttonSign',\n          attrs: {\n            fill: 'none',\n            'pointer-events': 'none',\n          },\n        },\n      ],\n    },\n  ],\n  ports: {\n    groups: {\n      top: {\n        attrs: {\n          circle: {\n            r: 4.6,\n            magnet: true,\n            stroke: '#1589FF',\n            strokeWidth: 1,\n            fill: '#fff',\n          },\n        },\n        position: 'top',\n      },\n      left: {\n        attrs: {\n          circle: {\n            r: 4.6,\n            magnet: true,\n            stroke: '#1589FF',\n            strokeWidth: 1,\n            fill: '#fff',\n          },\n        },\n        position: 'left',\n      },\n      right: {\n        attrs: {\n          circle: {\n            r: 4.6,\n            magnet: true,\n            stroke: '#1589FF',\n            strokeWidth: 1,\n            fill: '#fff',\n          },\n        },\n        position: 'right',\n      },\n      bottom: {\n        attrs: {\n          circle: {\n            r: 4.6,\n            magnet: true,\n            stroke: '#1589FF',\n            strokeWidth: 1,\n            fill: '#fff',\n          },\n        },\n        position: 'bottom',\n      },\n    },\n    items: [\n      { id: 'top1', group: 'top', },\n      { id: 'top2', group: 'top', },\n      { id: 'top3', group: 'top', },\n      { id: 'bottom1', group: 'bottom', },\n      { id: 'bottom2', group: 'bottom', },\n      { id: 'bottom3', group: 'bottom', },\n      { id: 'left1', group: 'left', },\n      { id: 'right1', group: 'right', },\n      // { id: 'left2', group: 'left', },\n      // { id: 'right2', group: 'right', },\n  ],\n    \n  },\n  attrs: {\n    body: {\n      refWidth: '100%',\n      refHeight: '100%',\n      strokeWidth: 1,\n      fill: '#111111',\n      stroke: '#111111',\n    },\n    buttonGroup: {\n      refX: 8,\n      refY: 8,\n    },\n    button: {\n      height: 14,\n      width: 16,\n      rx: 2,\n      ry: 2,\n      fill: '#111111',\n      stroke: '#111111',\n      cursor: 'pointer',\n      event: 'node:collapse',\n    },\n    buttonSign: {\n      refX: 3,\n      refY: 2,\n      stroke: '#808080',\n    },\n    label: {\n      fontSzie: 12,\n      fill: '#fff',\n      text: '',\n      strokeWidth: 2,\n      refX: 32,\n      refY: 10,\n    },\n  },\n})","import { Graph } from '@antv/x6'\nimport { Node } from '@antv/x6'\nimport { Cell } from '@antv/x6'\nimport { Edge } from '@antv/x6'\nimport { Model } from '@antv/x6'\nimport { Group } from '../nodes/Group'\nimport { showOrHidePorts, addCellToGroup, autoJustSizeOfSubRequirement } from './Util'\nimport { ConfigPanel } from '../configs/ConfigPanel'\n\nexport function expand(node: Node) {\n    const parent = node.getParent()\n    if (parent && parent.isNode()) {\n        let originSize = parent.getSize()\n        let originPosition = parent.getPosition()\n        let x = originPosition.x\n        let y = originPosition.y\n        let cornerX = originPosition.x + originSize.width\n        let cornerY = originPosition.y + originSize.height\n\n        let hasChange = false\n        const child = node\n        const bbox = child.getBBox().inflate(10)\n        bbox.y = bbox.y - 20\n        bbox.height = bbox.height + 20\n        const corner = bbox.getCorner()\n        if (bbox.x < x) { x = bbox.x; hasChange = true; }\n        if (bbox.y < y) { y = bbox.y; hasChange = true; }\n        if (corner.x > cornerX) { cornerX = corner.x; hasChange = true; }\n        if (corner.y > cornerY) { cornerY = corner.y; hasChange = true; }\n\n        if (hasChange) {\n            if (parent instanceof Group) {\n                let group = (parent as Group)\n                if (!group.isCollapsed()) {\n                    parent.setPosition(x, y)\n                    parent.setSize(cornerX - x, cornerY - y)\n                    expand(parent)\n                }\n            }\n        }\n    }\n}\n\nfunction clickEdge(graph: Graph, child: ConfigPanel, edge: Edge) {\n    graph.unselect(graph.getCells())\n    graph.select(edge)\n    child.setState({ editType: 'GRAPH' })\n    child.setState({ editType: 'EDGE' })\n    const lables = edge.getLabels()\n    if (lables.length > 0) {\n        const label = edge.getLabels()[0]\n        const text: string = label!.attrs!.label!.text!.toString()\n        child.edgePanel.setState({ relationText: text })\n    } else {\n        child.edgePanel.setState({ relationText: \"\" })\n    }\n}\nfunction clickNode(graph: Graph, child: ConfigPanel, node: Node) {\n    graph.unselect(graph.getCells())\n    graph.select(node)\n    child.setState({ editType: 'GRAPH' })\n    if (node instanceof Group) {\n        child.setState({ editType: 'GROUP' })\n        child.groupPanel.setState({ subrequirement: node.getAttrByPath('label/text') })\n    } else if (node.shape === 'reuse-node') {\n        child.setState({ editType: 'REUSE' })\n        child.reusePanel.setState({ subqueryText: node.getAttrByPath('name/text') })\n    } else if (node.shape === 'subquery-node') {\n        child.setState({ editType: 'NODE' })\n        child.nodePanel.setState({ subqueryText: node.getAttrByPath('rank/text') })\n        child.nodePanel.setState({ filterText: node.getAttrByPath('name/text') })\n        child.nodePanel.setState({ showText: node.getAttrByPath('show/text') })\n    }\n}\nexport function registerEvents(graph: Graph, child: ConfigPanel) {\n    graph.on('edge:selected', (args: {\n        cell: Cell\n        edge: Edge\n        options: Model.SetOptions\n    }) => {\n        args.edge.setAttrByPath('line/stroke', '#F87217')\n        args.edge.setAttrByPath('line/strokeDasharray', 3)\n    })\n    graph.on('edge:unselected', (args: {\n        cell: Cell\n        edge: Edge\n        options: Model.SetOptions\n    }) => {\n        args.edge.setAttrByPath('line/stroke', '#000000')\n        args.edge.setAttrByPath('line/strokeDasharray', 0)\n    })\n    graph.on('node:selected', (args: {\n        cell: Cell\n        node: Node\n        options: Model.SetOptions\n    }) => {\n        if (args.node instanceof Group) {\n            if ((args.node as Group).isCollapsed()) {\n                return\n            }\n        }\n        let pref = ''\n        if (args.node instanceof Group) { pref = 'rect' }\n        else { pref = 'body' }\n        args.node.setAttrByPath(pref + '/stroke', '#F87217')\n        args.node.setAttrByPath(pref + '/strokeDasharray', 3)\n        // const cells = args.node.getChildren()\n        // if (cells) {\n        //     cells.forEach((element) => {\n        //         graph.select(element)\n        //     })\n        // }\n    })\n    graph.on('node:unselected', (args: {\n        cell: Cell\n        node: Node\n        options: Model.SetOptions\n    }) => {\n        let pref = ''\n        if (args.node instanceof Group) { pref = 'rect' }\n        else { pref = 'body' }\n        args.node.setAttrByPath(pref + '/stroke', '#000000')\n        args.node.setAttrByPath(pref + '/strokeDasharray', 0)\n    })\n    graph.on('edge:added', ({ edge }) => {\n        clickEdge(graph, child, edge)\n    })\n\n    graph.on('node:added', ({ node }) => {\n        console.log('point: ')\n        clickNode(graph, child, node)\n        const { x, y } = node.position()\n        addCellToGroup(x, y, node, graph)\n    })\n\n    graph.on('node:click', ({ node }) => {\n        clickNode(graph, child, node)\n    })\n    graph.on('blank:click', ({e, x, y}) => {\n        graph.unselect(graph.getCells())\n    })\n    graph.on('edge:click', ({ edge }) => {\n        clickEdge(graph, child, edge)\n    })\n\n    graph.on('node:mouseenter', () => {\n        showOrHidePorts(true)\n    })\n\n    graph.on('node:mouseleave', () => {\n        showOrHidePorts(false)\n    })\n\n    graph.on('node:mouseup', ({ e, x, y, node }) => {\n        addCellToGroup(x, y, node, graph)\n    })\n\n    graph.on('blank:mouseup', ({ e, x, y }) => {\n        child.setState({ editType: 'GRAPH' })\n    })\n\n    graph.on('node:change:size', ({ node }) => {\n        expand(node)\n    })\n    graph.on('node:change:position', ({ node }) => {\n        expand(node)\n    })\n\n    graph.on('node:collapse', ({ node }: { node: Group }) => {\n        node.toggleCollapse()\n        autoJustSizeOfSubRequirement(node)\n\n        const collapse = (parent: Group) => {\n            const cells = parent.getChildren()\n            if (cells) {\n                cells.forEach((cell) => {\n                    if (node.isCollapsed()) {\n                        cell.hide()\n                    } else {\n                        cell.show()\n                    }\n\n                    if (cell instanceof Group) {\n                        if (!cell.isCollapsed()) {\n                            collapse(cell)\n                        }\n                    }\n                })\n            }\n            // const allEdges = graph.getEdges()\n            // allEdges.forEach((edge) => {\n            //     const startNode = edge.getSourceNode();\n            //     const endNode = edge.getTargetNode();\n            // if (startNode instanceof Group || endNode instanceof Group) {\n            //     graph.removeEdge(edge)\n            // }\n            //     if (parent.contains(startNode) && parent.contains(endNode)) {\n            //     } else if (parent.contains(startNode)) {\n            //         createEdge('' + parent.id + '' + endNode!.id, parent.id, endNode!.id, graph)\n            //     } else if (parent.contains(endNode)) {\n            //         createEdge('' + startNode!.id + '' + parent.id, startNode!.id, parent.id, graph)\n            //     } else {\n            //     }\n            // })\n        }\n\n        collapse(node)\n    })\n}\n","import { Node } from '@antv/x6'\nimport { Cell } from '@antv/x6'\nimport { Graph } from '@antv/x6'\nimport { Group } from '../nodes/Group'\nimport { message } from 'antd'\nimport { expand } from './GraphEvents'\n\nexport function getSelectedCell(graph: Graph) {\n    const cells = graph.getSelectedCells()\n    if (cells.length !== 1) {\n        message.error('Please select one component!')\n        return null\n    } else {\n        return cells[0]\n    }\n}\nexport function autoJustSizeOfSubRequirement(node: Group) {\n    const title: string = node.getAttrByPath('label/text')\n    const width: number = node.getSize().width\n    const length1 = (getLengthOfStr(title) + 6) * 8.4\n    const length2 = (width > length1) ? width : length1\n    if (node.isCollapsed()) {\n        const lines = title.split('\\n').length\n        const curHeight = (lines + 1) * 14\n        node.setSize({ width: length2, height: curHeight })\n    } else {\n        node.setSize({ width: length2, height: node.getSize().height })\n    }\n}\nexport function getLengthOfStr(str: string) {\n    let result = 0\n    const splits = str.split('\\n')\n    splits.forEach(element => {\n        if (element.length > result) result = element.length\n    });\n    return result\n}\nexport function autoJustSizeOfSubQuery(node: Node) {\n    if (node instanceof Group) {\n        message.error('Please select a Mini-query component!')\n        return\n    }\n    const title: string = node.getAttrByPath('rank/text')\n    const content: string = node.getAttrByPath('name/text')\n    const show: string = node.getAttrByPath('show/text')\n    const length1 = (getLengthOfStr(title) + 6) * 8.4\n    const length2 = (getLengthOfStr(content) + 6) * 8.4\n    const length3 = (getLengthOfStr(show) + 6) * 8.4\n    const newWidth = Math.max(length1, length2, length3, 150)\n    const line1 = title.split('\\n').length\n    const line2 = content.split('\\n').length\n    const line3 = show.split('\\n').length\n    const lines = line1 + line2 + line3\n    const lineHeight = 14\n    const marginTop = 9 // lineHeight / 2\n    const newHeight = lines * lineHeight + marginTop * 4\n    node.setAttrByPath('rank/refY', marginTop / newHeight)\n    node.setAttrByPath('name/refY', (marginTop * 2 + line1 * lineHeight) / newHeight)\n    node.setAttrByPath('show/refY', (marginTop * 3 + (line1 + line2) * lineHeight) / newHeight)\n\n    node.setSize({ width: newWidth, height: newHeight })\n}\n\nexport function autoJustSizeOfReuse(node: Node) {\n    if (node instanceof Group) {\n        message.error('Please select a Reuse component!')\n        return\n    }\n    const content: string = node.getAttrByPath('name/text')\n    const length2 = (getLengthOfStr(content) + 6) * 8.4\n    const newWidth = Math.max(length2, 190)\n    const line2 = content.split('\\n').length\n    const lines = 1 + line2 \n    const lineHeight = 14\n    const marginTop = 10 // lineHeight / 2\n    const newHeight = lines * lineHeight + marginTop * 3\n    node.setAttrByPath('rank/refY', marginTop / newHeight)\n    node.setAttrByPath('name/refY', (marginTop * 2 + 1 * lineHeight) / newHeight)\n\n    node.setSize({ width: newWidth, height: newHeight })\n}\nexport function showOrHidePorts(show: boolean) {\n    const container = document.getElementById('container')!\n    const ports = container.querySelectorAll(\n        '.x6-port-body',\n    ) as NodeListOf<SVGElement>\n    for (let i = 0, len = ports.length; i < len; i = i + 1) {\n        ports[i].style.visibility = show ? 'visible' : 'hidden'\n    }\n}\n\nexport function hidePorts(show: boolean) {\n    const container = document.getElementById('root')!\n    const ports = container.querySelectorAll(\n        '.x6-port-body',\n    ) as NodeListOf<SVGElement>\n    for (let i = 0, len = ports.length; i < len; i = i + 1) {\n        ports[i].style.visibility = show ? 'visible' : 'hidden'\n    }\n}\n\nexport function addCellToGroup(x: number, y: number, curCell: Node, graph: Graph) {\n    console.log('addpoint: ')\n    if (curCell.hasParent()) {\n        return\n    }\n    if (curCell instanceof Node) {\n        // if ((curCell as Node).shape === 'reuse-node') {\n            // return\n        // }\n    }\n\n    const childs: Cell[] = []\n    const getChilds = (node: Cell) => {\n        const temp = node.getChildren()\n        temp?.forEach(test => {\n            childs.push(test)\n            getChilds(test)\n        })\n    }\n    getChilds(curCell)\n\n    const cells = graph.getCells()\n    cells.forEach(cell => {\n        if (cell !== curCell && (cell instanceof Group)) {\n            let isChild = false\n            let i = 0\n            for (i = 0; i < childs.length; i++) {\n                if (childs[i] === cell) {\n                    isChild = true\n                }\n            }\n            if (!isChild) {\n                const group = (cell as Group)\n                const groupPosition = group.getProp<{ x: number; y: number }>('position')\n                const groupWidth = group.getSize().width\n                const groupHeight = group.getSize().height\n\n                const curPosition = curCell.getProp<{ x: number; y: number }>('position')\n                const curWidth = curCell.getSize().width\n                const curHeight = curCell.getSize().height\n                const x = curPosition.x + curWidth / 2\n                const y = curPosition.y + curHeight / 2\n\n                if (x > groupPosition.x && x < groupPosition.x + groupWidth\n                    && y > groupPosition.y && y < groupPosition.y + groupHeight) {\n                    group.addChild(curCell)\n                    group.toBack()\n                    expand(curCell as Node)\n                    return\n                }\n            }\n        }\n    });\n}\n\nexport function createGroup(\n    id: string,\n    width: number,\n    height: number,\n    fill: string,\n    title: string,\n) {\n    const group = new Group({\n        id: id,\n        width: width,\n        height: height,\n        attrs: {\n            body: {\n                fill: fill || 'blue',\n                stroke: '#111111',\n            },\n            rect: {\n                fill: fill || 'blue',\n                stroke: '#000000',\n            },\n            label: {\n                text: title,\n                fill: '#111111',\n                fontFamily: 'Courier New',\n                fontSize: 14,\n            },\n        },\n    })\n    return group\n}\nexport function getPortIdClockwise(sourcePortId: string) {\n    switch (sourcePortId) {\n        case 'bottom1': return 'left1'\n        case 'left1': return 'top1'\n        case 'top1': return 'top2'\n        case 'top2': return 'top3'\n        case 'top3': return 'right1'\n        case 'right1': return 'bottom3'\n        case 'bottom3': return 'bottom2'\n        case 'bottom2': return 'bottom1'\n        default:\n            break;\n    }\n    throw new Error('Function not implemented.')\n}\n\nexport function getPortIdAnticlockwise(sourcePortId: string) {\n    switch (sourcePortId) {\n        case 'bottom1': return 'bottom2'\n        case 'left1': return 'bottom1'\n        case 'top1': return 'left1'\n        case 'top2': return 'top1'\n        case 'top3': return 'top2'\n        case 'right1': return 'top3'\n        case 'bottom3': return 'right1'\n        case 'bottom2': return 'bottom3'\n        default:\n            break;\n    }\n    throw new Error('Function not implemented.')\n}\nexport function createNode(\n    id: string,\n    width: number,\n    height: number,\n    title: string,\n    content: string,\n    showText: string,\n    graph: Graph,\n) {\n    return graph.createNode({\n        id: id,\n        width: width,\n        height: height,\n        shape: 'subquery-node',\n        attrs: {\n            rank: {\n                text: title,\n                wordSpacing: '-1px',\n                letterSpacing: 0,\n            },\n            name: {\n                text: content,\n                letterSpacing: 0,\n            },\n            show: {\n                text: showText,\n                letterSpacing: 0,\n            },\n        }\n    })\n}\nexport function createReuseNode(\n    id: string,\n    width: number,\n    height: number,\n    title: string,\n    content: string,\n    showText: string,\n    graph: Graph,\n) {\n    return graph.createNode({\n        id: id,\n        width: width,\n        height: height,\n        shape: 'reuse-node',\n        attrs: {\n            rank: {\n                text: title,\n                wordSpacing: '-1px',\n                letterSpacing: 0,\n            },\n            name: {\n                text: content,\n                letterSpacing: 0,\n            },\n        }\n    })\n}\nexport function createEdge(\n    id: string,\n    source: string,\n    target: string,\n    graph: Graph,\n    vertices?: { x: number; y: number }[],\n) {\n    return graph.addEdge({\n        id,\n        source,\n        target,\n        vertices,\n        label: '',\n    })\n}\nGraph.registerNode(\n    'group-node', Group, true\n)\n\nGraph.registerNode(\n    'subquery-node',\n    {\n        markup: [\n            { tagName: 'rect', selector: 'body', },\n            { tagName: 'text', selector: 'rank', },\n            { tagName: 'text', selector: 'name', },\n            { tagName: 'text', selector: 'show', },\n        ],\n        attrs: {\n            body: {\n                refWidth: '100%',\n                refHeight: '100%',\n                fill: '#eeeeee',\n                stroke: '#111111',\n                strokeWidth: 1,\n                rx: 10,\n                ry: 10,\n                pointerEvents: 'visiblePainted',\n            },\n            rank: {\n                refX: 0.5,\n                refY: 0.1,\n                text: '',\n                fill: '#111111',\n                fontFamily: 'Courier New',\n                fontSize: 14,\n                textAnchor: 'middle',\n                textDecoration: 'underline',\n            },\n            name: {\n                refX: 0.5,\n                refY: 0.4,\n                text: '',\n                fill: '#111111',\n                fontFamily: 'Courier New',\n                fontSize: 14,\n                textAnchor: 'middle',\n            },\n            show: {\n                refX: 0.5,\n                refY: 0.7,\n                text: '',\n                fill: '#111111',\n                fontFamily: 'Courier New',\n                fontSize: 14,\n                stroke: '#FF8040',\n                textAnchor: 'middle',\n            },\n        },\n        ports: {\n            groups: {\n                top: {\n                    attrs: {\n                        circle: {\n                            r: 4.6,\n                            magnet: true,\n                            stroke: '#1589FF',\n                            strokeWidth: 1,\n                            fill: '#fff',\n                        },\n                    },\n                    position: 'top',\n                },\n                left: {\n                    attrs: {\n                        circle: {\n                            r: 4.6,\n                            magnet: true,\n                            stroke: '#1589FF',\n                            strokeWidth: 1,\n                            fill: '#fff',\n                        },\n                    },\n                    position: 'left',\n                },\n                right: {\n                    attrs: {\n                        circle: {\n                            r: 4.6,\n                            magnet: true,\n                            stroke: '#1589FF',\n                            strokeWidth: 1,\n                            fill: '#fff',\n                        },\n                    },\n                    position: 'right',\n                },\n                bottom: {\n                    attrs: {\n                        circle: {\n                            r: 4.6,\n                            magnet: true,\n                            stroke: '#1589FF',\n                            strokeWidth: 1,\n                            fill: '#fff',\n                        },\n                    },\n                    position: 'bottom',\n                },\n            },\n            items: [\n                { id: 'top1', group: 'top', },\n                { id: 'top2', group: 'top', },\n                { id: 'top3', group: 'top', },\n                { id: 'bottom1', group: 'bottom', },\n                { id: 'bottom2', group: 'bottom', },\n                { id: 'bottom3', group: 'bottom', },\n                { id: 'left1', group: 'left', },\n                { id: 'right1', group: 'right', },\n            ],\n        },\n    },\n    true,\n)\n\nGraph.registerNode(\n    'reuse-node',\n    {\n        markup: [\n            { tagName: 'rect', selector: 'body', },\n            { tagName: 'text', selector: 'rank', },\n            { tagName: 'text', selector: 'name', },\n        ],\n        attrs: {\n            body: {\n                refWidth: '100%',\n                refHeight: '100%',\n                fill: '#eeeeee',\n                stroke: '#111111',\n                strokeWidth: 1,\n                pointerEvents: 'visiblePainted',\n            },\n            rank: {\n                refX: 0.5,\n                refY: 0.1724,\n                text: '',\n                fill: '#111111',\n                stroke: '#1589FF',\n                strokeWidth: 1.7,\n                fontFamily: 'Courier New',\n                fontSize: 14,\n                textAnchor: 'middle',\n            },\n            name: {\n                refX: 0.5,\n                refY: 0.6,\n                text: '',\n                fill: '#111111',\n                fontFamily: 'Courier New',\n                fontSize: 14,\n                textAnchor: 'middle',\n            },\n        },\n        ports: {\n            groups: {\n                top: {\n                    attrs: {\n                        circle: {\n                            r: 4.6,\n                            magnet: true,\n                            stroke: '#1589FF',\n                            strokeWidth: 1,\n                            fill: '#fff',\n                        },\n                    },\n                    position: 'top',\n                },\n                left: {\n                    attrs: {\n                        circle: {\n                            r: 4.6,\n                            magnet: true,\n                            stroke: '#1589FF',\n                            strokeWidth: 1,\n                            fill: '#fff',\n                        },\n                    },\n                    position: 'left',\n                },\n                right: {\n                    attrs: {\n                        circle: {\n                            r: 4.6,\n                            magnet: true,\n                            stroke: '#1589FF',\n                            strokeWidth: 1,\n                            fill: '#fff',\n                        },\n                    },\n                    position: 'right',\n                },\n                bottom: {\n                    attrs: {\n                        circle: {\n                            r: 4.6,\n                            magnet: true,\n                            stroke: '#1589FF',\n                            strokeWidth: 1,\n                            fill: '#fff',\n                        },\n                    },\n                    position: 'bottom',\n                },\n            },\n            items: [\n                { id: 'top1', group: 'top', },\n                { id: 'top2', group: 'top', },\n                { id: 'top3', group: 'top', },\n                { id: 'bottom1', group: 'bottom', },\n                { id: 'bottom2', group: 'bottom', },\n                { id: 'bottom3', group: 'bottom', },\n                { id: 'left1', group: 'left', },\n                { id: 'right1', group: 'right', },\n            ],\n        },\n    },\n    true,\n)","import React, { } from 'react';\nimport { Tabs, Input, Form, Divider } from \"antd\";\nimport { ConfigPanel } from './ConfigPanel';\nimport { Node } from '@antv/x6'\nimport { autoJustSizeOfSubQuery, getSelectedCell } from '../utils/Util';\n\nexport interface Props {\n  onRef: (c: ConfigNode) => void\n}\n\nexport interface State {\n  subqueryText: string\n  filterText: string\n  showText: string\n}\n\nconst { TabPane } = Tabs;\nconst { Item } = Form;\nconst { TextArea } = Input\n\nexport class ConfigNode extends React.Component<Props, State> {\n  state: State = {\n    subqueryText: '',\n    filterText: '',\n    showText: ''\n  }\n\n  public parent: ConfigPanel\n\n  setParent(c: ConfigPanel) {\n    this.parent = c\n  }\n\n  componentDidMount() {\n    this.props.onRef(this)\n  }\n  componentWillUnmount = () => {\n    this.setState = (state,callback)=>{\n      return;\n    };\n}\n\n  onChangeSubQuery = (e: any) => {\n    const cell = getSelectedCell(this.parent.parent.graph)\n    if (cell !== null) {\n      const node = (cell as Node)\n      node.setAttrByPath('rank/text', e.target.value)\n      this.setState({ subqueryText: e.target.value })\n      autoJustSizeOfSubQuery(node)\n    }\n  }\n\n  onChangeFilter = (e: any) => {\n    const cell = getSelectedCell(this.parent.parent.graph)\n    if (cell !== null) {\n      const node = (cell as Node)\n      node.setAttrByPath('name/text', e.target.value)\n      this.setState({ filterText: e.target.value })\n      autoJustSizeOfSubQuery(node)\n    }\n  }\n\n  onChangeShow = (e: any) => {\n    const cell = getSelectedCell(this.parent.parent.graph)\n    if (cell !== null) {\n      const node = (cell as Node)\n      node.setAttrByPath('show/text', e.target.value)\n      this.setState({ showText: e.target.value })\n      autoJustSizeOfSubQuery(node)\n    }\n  }\n\n  render() {\n    return (\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Mini-query Setting\" key=\"1\" style={{ padding: 3 }}  >\n          <Divider orientation=\"left\" orientationMargin=\"0\">Table</Divider>\n          <TextArea rows={1} autoFocus={true} onChange={this.onChangeSubQuery} value={this.state.subqueryText} placeholder=\"Table name\"/>\n          <Item label=\"\"></Item>\n          <Divider orientation=\"left\" orientationMargin=\"0\">Filter</Divider>\n          <TextArea rows={5} onChange={this.onChangeFilter} value={this.state.filterText} placeholder=\"Conditions to filter rows\"/>\n          <Item label=\"\"></Item>\n          <Divider orientation=\"left\" orientationMargin=\"0\">Columns</Divider>\n          <TextArea rows={10} onChange={this.onChangeShow} value={this.state.showText} placeholder=\"Columns to display\"/>\n        </TabPane>\n      </Tabs>\n    );\n  }\n}","import React from 'react';\nimport { Button, Divider, Tabs } from \"antd\";\n// import { Image } from \"antd\";\nimport { Timeline } from 'antd';\n// import TextArea from 'antd/lib/input/TextArea';\nimport { ConfigPanel } from './ConfigPanel';\nimport { Upload } from 'antd';\nimport { message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nconst { TabPane } = Tabs;\nexport interface Props {\n  onRef: (c: ConfigGraph) => void\n}\n\nexport class ConfigGraph extends React.Component<Props> {\n  public parent: ConfigPanel\n  \n  componentDidMount() {\n    this.props.onRef(this)\n  }\n\n  setParent(c: ConfigPanel) {\n    this.parent = c\n  }\n  draw = () => {\n    const json = document.getElementById('jsonText')?.textContent as string\n    this.parent.parent.graph.fromJSON(JSON.parse(json))\n  }\n\n  render() {\n    const that = this\n    const uploadJSON = {\n      beforeUpload(file: Blob) {\n          const reader = new FileReader();\n          reader.readAsText(file)\n          reader.onload = () => {\n            that.parent.parent.graph.fromJSON(JSON.parse(reader.result as string))\n            message.success('Upload successfully')\n            return true\n          };\n          return false\n      },\n    }\n    return (\n      <div>\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"Introduction\" key=\"1\" style={{ padding: 3 }}  >\n            {/* <Divider orientation=\"left\" orientationMargin=\"0\"></Divider> */}\n            <Timeline style={{ marginTop: 30 }}>\n              <Timeline.Item><strong>VQFLow</strong> is the abbreviation for <strong>V</strong>isual <strong>Q</strong>uery <strong>F</strong>low, which aims to help business analysts quickly and clearly describe the requirements of complex queries.</Timeline.Item>\n              <Timeline.Item>The query requirements described by VQFlow are easy to understand, and thus developers can quickly and correctly write complex queries.</Timeline.Item>\n              {/* <Timeline.Item>VQFlow can improve the understandability of the existing select queries, and thus maintainers can quickly easily modifiy the select queries.</Timeline.Item> */}\n              {/* <Timeline.Item>Demo: https://github.com/vqflow/questionnaire/blob/main/demo.mp4</Timeline.Item> */}\n              {/* <Timeline.Item>Samples: https://github.com/vqflow/questionnaire/blob/main/Three_cases.zip</Timeline.Item> */}\n              {/* <Timeline.Item>Logo: <Image src=\"big_logo.png\" /></Timeline.Item> */}\n            </Timeline>\n          </TabPane>\n          {/* <TabPane tab='JSON' key=\"2\" style={{ padding: 3 }}>\n            <Divider orientation=\"left\" orientationMargin=\"0\">Draw from JSON data</Divider>\n            <TextArea id=\"jsonText\" rows={20} autoFocus={true} placeholder=\"Please input JSON data\" />\n\n            <Button type='primary' block onClick={this.draw} style={{ marginTop: 10 }}>Draw</Button>\n          </TabPane> */}\n          <TabPane tab='Upload JSON' key=\"3\" style={{ padding: 3 }}>\n            <Divider orientation=\"left\" orientationMargin=\"0\">Draw from JSON data</Divider>\n            <Upload {...uploadJSON}>\n              <Button icon={<UploadOutlined />}>Click to Upload</Button>\n            </Upload>\n          </TabPane>\n        </Tabs>\n      </div>\n\n    );\n  }\n}\n","import React, { } from 'react';\nimport { Edge } from '@antv/x6'\nimport { Tabs, Divider, Input } from \"antd\";\nimport { ConfigPanel } from './ConfigPanel';\n\nexport interface Props {\n  onRef: (c: ConfigEdge) => void\n}\n\nexport interface State {\n  relationText: string\n}\n\nconst { TabPane } = Tabs;\nconst { TextArea } = Input;\n\nexport class ConfigEdge extends React.Component<Props, State> {\n  state: State = {\n    relationText: \"\"\n  }\n  public parent: ConfigPanel\n\n  setParent(c: ConfigPanel) {\n    this.parent = c\n  }\n\n  componentDidMount() {\n    this.props.onRef(this)\n  }\n\n  onChangeRelation = (e: any) => {\n    const cell = this.parent.parent.graph.getSelectedCells()[0]\n    const node = (cell as Edge)\n    node.setLabels(e.target.value)\n    this.setState({relationText: e.target.value})\n  }\n\n  render() {\n    return (\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Relation Setting\" key=\"1\" style={{ padding: 3 }}  >\n          <Divider orientation=\"left\" orientationMargin=\"0\">Relation</Divider>\n          <TextArea rows={10} autoFocus={true} onChange={this.onChangeRelation} value={this.state.relationText} placeholder=\"EXPAND / REF / UNION\"/>\n        </TabPane>\n      </Tabs>\n    );\n  }\n}\n","import React, { } from 'react';\nimport { Tabs, Input, Divider } from \"antd\";\nimport { ConfigPanel } from './ConfigPanel';\nimport { autoJustSizeOfSubRequirement, getSelectedCell } from '../utils/Util';\nimport { Group } from '../nodes/Group';\n\nconst { TabPane } = Tabs;\nconst { TextArea } = Input\n\nexport interface Props {\n  onRef: (c: ConfigGroup) => void\n}\n\nexport interface State {\n  subrequirement: string\n}\n\nexport class ConfigGroup extends React.Component<Props, State> {\n  state: State = {\n    subrequirement: \"\"\n  }\n  public parent: ConfigPanel\n\n  setParent(c: ConfigPanel) {\n    this.parent = c\n  }\n\n  componentDidMount() {\n    this.props.onRef(this)\n  }\n\n  onChangeSubRequirement = (e: any) => {\n    const cell = getSelectedCell(this.parent.parent.graph)\n    if (cell !== null) {\n      const node = (cell as Group)\n      node.setAttrByPath('label/text', e.target.value)\n      this.setState({ subrequirement: e.target.value })\n      autoJustSizeOfSubRequirement(node)\n    }\n  }\n\n  render() {\n    return (\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Requirements Module Setting\" key=\"1\" style={{ padding: 3 }}  >\n          <Divider orientation=\"left\" orientationMargin=\"0\">Requirements Description</Divider>\n          <TextArea rows={10} autoFocus={true} onChange={this.onChangeSubRequirement} value={this.state.subrequirement} placeholder=\"Please input the requirements description\"/>\n        </TabPane>\n      </Tabs>\n    );\n  }\n}\n","import React, { } from 'react';\nimport { Tabs, Input, Divider } from \"antd\";\nimport { ConfigPanel } from './ConfigPanel';\nimport { Node } from '@antv/x6'\nimport { autoJustSizeOfReuse, getSelectedCell } from '../utils/Util';\n\nexport interface Props {\n  onRef: (c: ConfigReuse) => void\n}\n\nexport interface State {\n  subqueryText: string\n}\n\nconst { TabPane } = Tabs;\nconst { TextArea } = Input\n\nexport class ConfigReuse extends React.Component<Props, State> {\n  state: State = {\n    subqueryText: '',\n  }\n\n  public parent: ConfigPanel\n\n  setParent(c: ConfigPanel) {\n    this.parent = c\n  }\n\n  componentDidMount() {\n    this.props.onRef(this)\n  }\n  componentWillUnmount = () => {\n    this.setState = (state,callback)=>{\n      return;\n    };\n}\n\n  onChangeSubQuery = (e: any) => {\n    const cell = getSelectedCell(this.parent.parent.graph)\n    if (cell !== null) {\n      const node = (cell as Node)\n      node.setAttrByPath('name/text', e.target.value)\n      this.setState({ subqueryText: e.target.value })\n      autoJustSizeOfReuse(node)\n    }\n  }\n\n  render() {\n    return (\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Reuse Setting\" key=\"1\" style={{ padding: 3 }}  >\n          <Divider orientation=\"left\" orientationMargin=\"0\">Requirement to reuse</Divider>\n          <TextArea rows={10} autoFocus={true} onChange={this.onChangeSubQuery} value={this.state.subqueryText} placeholder=\"Please copy the requirements description of a Requirements Module\"/>\n        </TabPane>\n      </Tabs>\n    );\n  }\n}","import React from 'react';\nimport { ConfigNode } from './ConfigNode';\nimport { ConfigGraph } from './ConfigGraph';\nimport { ConfigEdge } from './ConfigEdge';\nimport { ConfigGroup } from './ConfigGroup';\nimport App from '../App'\nimport './ConfigPanel.css'\nimport { ConfigReuse } from './ConfigReuse';\n\nexport interface Props {\n  onRef: (c: ConfigPanel) => void\n}\n\nexport interface State {\n  editType: string\n}\n\nexport class ConfigPanel extends React.Component<Props, State> {\n  state: State = {\n    editType: \"GRAPH\"\n  }\n  public parent: App\n  public nodePanel: ConfigNode\n  public edgePanel: ConfigEdge\n  public groupPanel: ConfigGroup\n  public reusePanel: ConfigReuse\n  public graphPanel: ConfigGraph;\n\n  componentDidMount() {\n    this.props.onRef(this)\n  }\n\n  setParent(c: App) {\n    this.parent = c\n  }\n\n  onBindNodePanel = (c: ConfigNode) => {\n    this.nodePanel = c\n    this.nodePanel.setParent(this)\n  }\n\n  onBindEdgePanel = (c: ConfigEdge) => {\n    this.edgePanel = c\n    this.edgePanel.setParent(this)\n  }\n  onBindGraphPanel = (c: ConfigGraph) => {\n    this.graphPanel = c\n    this.graphPanel.setParent(this)\n  }\n\n  onBindGroupPanel = (c: ConfigGroup) => {\n    this.groupPanel = c\n    this.groupPanel.setParent(this)\n  }\n  onBindReusePanel = (c: ConfigReuse) => {\n    this.reusePanel = c\n    this.reusePanel.setParent(this)\n  }\n\n  render() {\n    return (\n      <div className=\"configPanel\">\n        {this.state.editType === 'GRAPH' && <ConfigGraph onRef={this.onBindGraphPanel}/>}\n        {this.state.editType === 'NODE' && <ConfigNode onRef={this.onBindNodePanel} />}\n        {this.state.editType === 'GROUP' && <ConfigGroup onRef={this.onBindGroupPanel} />}\n        {this.state.editType === 'EDGE' && <ConfigEdge onRef={this.onBindEdgePanel} />}\n        {this.state.editType === 'REUSE' && <ConfigReuse onRef={this.onBindReusePanel} />}\n      </div>\n    );\n  }\n}\n","import React from 'react'\nimport { message } from 'antd'\nimport { Graph, Rectangle } from '@antv/x6'\nimport { Node } from '@antv/x6'\nimport { Cell } from '@antv/x6'\nimport { Edge } from '@antv/x6'\nimport { Addon } from '@antv/x6'\nimport { DataUri } from '@antv/x6'\nimport { Toolbar } from '@antv/x6-react-components'\nimport { ZoomInOutlined } from '@ant-design/icons'\nimport { ZoomOutOutlined } from '@ant-design/icons'\nimport { RedoOutlined } from '@ant-design/icons'\nimport { ShrinkOutlined } from '@ant-design/icons'\nimport { UndoOutlined } from '@ant-design/icons'\nimport { CompressOutlined } from '@ant-design/icons'\nimport { FileImageOutlined } from '@ant-design/icons'\nimport { DeleteOutlined } from '@ant-design/icons'\nimport { FileOutlined } from '@ant-design/icons'\nimport { CopyOutlined } from '@ant-design/icons'\nimport { SnippetsOutlined } from '@ant-design/icons'\nimport { VerticalAlignTopOutlined } from '@ant-design/icons'\nimport { VerticalAlignBottomOutlined } from '@ant-design/icons'\nimport { Group } from './nodes/Group'\nimport { ConfigPanel } from './configs/ConfigPanel'\nimport './App.css'\nimport '@antv/x6-react-components/es/menu/style/index.css'\nimport '@antv/x6-react-components/es/toolbar/style/index.css'\nimport { autoJustSizeOfSubRequirement, createGroup, createNode, createReuseNode, getPortIdAnticlockwise, getPortIdClockwise, getSelectedCell, hidePorts } from './utils/Util'\nimport { registerEvents } from './utils/GraphEvents'\nimport Icon from '@ant-design/icons';\n\nconst Item = Toolbar.Item\nconst ToolGroup = Toolbar.Group\nconst { Stencil } = Addon\n\nconst SourceAntiClockwise = () => (\n  <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g>\n      <title>Layer 1</title>\n      <text fill=\"#000000\" x=\"299.34132\" y=\"414.70163\" id=\"svg_2\" fontSize=\"30\" fontFamily=\"Noto Sans JP\" textAnchor=\"start\" stroke=\"#000\" transform=\"matrix(14.5978 0 0 14.5978 -3978.83 -5394.16)\">S</text>\n      <path stroke=\"null\" fill=\"#333333\" d=\"m86.36227,147.04818a35.40779,35.40779 0 0 1 35.40779,35.40779l0,177.03898l177.03897,0a35.40779,35.40779 0 1 1 0,70.81558l-212.44677,0a35.40779,35.40779 0 0 1 -35.4078,-35.40779l0,-212.44678a35.40779,35.40779 0 0 1 35.4078,-35.40779zm263.04451,-19.54511a424.89355,424.89355 0 0 1 463.02774,92.13109a35.40779,35.40779 0 0 1 -50.06663,50.06663a354.07796,354.07796 0 0 0 -500.73704,0l-150.23528,150.23527a35.40779,35.40779 0 0 1 -50.06663,-50.10203l150.23528,-150.19986a424.89355,424.89355 0 0 1 137.84255,-92.13109zm340.37514,517.73279a35.40779,35.40779 0 0 1 35.40779,-35.40779l212.44678,0a35.40779,35.40779 0 0 1 35.4078,35.40779l0,212.44678a35.40779,35.40779 0 1 1 -70.8156,0l0,-177.03898l-177.03898,0a35.40779,35.40779 0 0 1 -35.40779,-35.40779zm272.88789,-25.03331a35.40779,35.40779 0 0 1 0,50.10203l-150.23528,150.19986a424.89355,424.89355 0 0 1 -600.87029,0a35.40779,35.40779 0 1 1 50.06663,-50.06663a354.07796,354.07796 0 0 0 500.73704,0l150.23528,-150.19986a35.40779,35.40779 0 0 1 50.06663,0l0,-0.03541z\" id=\"svg_9\" />\n    </g>\n  </svg>\n);\nconst SourceAntiClockwiseIcon = () => <Icon component={SourceAntiClockwise} />;\nconst SourceClockwise = () => (\n  <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g>\n      <title>Layer 1</title>\n      <path stroke=\"null\" id=\"svg_1\" d=\"m939.67571,145.14783a35.36938,35.36938 0 0 1 35.36939,35.36938l0,212.21628a35.36938,35.36938 0 0 1 -35.36939,35.36938l-212.21628,0a35.36938,35.36938 0 1 1 0,-70.73875l176.84691,0l0,-176.84691a35.36938,35.36938 0 0 1 35.36938,-35.36938zm-425.17531,18.92262a353.6938,353.6938 0 0 0 -250.09688,103.59692a35.36938,35.36938 0 1 1 -50.0123,-50.0123a424.43256,424.43256 0 0 1 600.21837,0l150.07228,150.0369a35.36938,35.36938 0 0 1 -50.0123,50.04767l-150.10765,-150.07227a353.6938,353.6938 0 0 0 -250.06151,-103.59692zm-460.5447,478.72456a35.36938,35.36938 0 0 1 35.36939,-35.36938l212.21628,0a35.36938,35.36938 0 1 1 0,70.73875l-176.84691,0l0,176.84691a35.36938,35.36938 0 1 1 -70.73876,0l0,-212.21628zm10.36323,-25.00615a35.36938,35.36938 0 0 1 50.0123,0l150.07228,150.07227a353.65843,353.65843 0 0 0 500.19376,0a35.36938,35.36938 0 0 1 50.0123,50.0123a424.43256,424.43256 0 0 1 -600.21837,0l-150.07228,-150.0369a35.36938,35.36938 0 0 1 0,-50.04767z\" fill=\"#333333\" />\n      <text fontWeight=\"normal\" transform=\"matrix(14.5178 0 0 14.5178 -4468.57 -5462.42)\" stroke=\"#000\" textAnchor=\"start\" fontFamily=\"Noto Sans JP\" fontSize=\"30\" id=\"svg_2\" y=\"421.46735\" x=\"334.09207\" fill=\"#000000\">S</text>\n    </g>\n  </svg>\n);\nconst SourceClockwiseIcon = () => <Icon component={SourceClockwise} />;\nconst TargetAntiClockwise = () => (\n  <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g>\n      <title>Layer 1</title>\n      <text fill=\"#000000\" x=\"299.34132\" y=\"414.70163\" id=\"svg_2\" fontSize=\"30\" fontFamily=\"Noto Sans JP\" textAnchor=\"start\" stroke=\"#000\" transform=\"matrix(14.5978 0 0 14.5978 -3978.83 -5394.16)\">T</text>\n      <path stroke=\"null\" fill=\"#333333\" d=\"m86.36227,147.04818a35.40779,35.40779 0 0 1 35.40779,35.40779l0,177.03898l177.03897,0a35.40779,35.40779 0 1 1 0,70.81558l-212.44677,0a35.40779,35.40779 0 0 1 -35.4078,-35.40779l0,-212.44678a35.40779,35.40779 0 0 1 35.4078,-35.40779zm263.04451,-19.54511a424.89355,424.89355 0 0 1 463.02774,92.13109a35.40779,35.40779 0 0 1 -50.06663,50.06663a354.07796,354.07796 0 0 0 -500.73704,0l-150.23528,150.23527a35.40779,35.40779 0 0 1 -50.06663,-50.10203l150.23528,-150.19986a424.89355,424.89355 0 0 1 137.84255,-92.13109zm340.37514,517.73279a35.40779,35.40779 0 0 1 35.40779,-35.40779l212.44678,0a35.40779,35.40779 0 0 1 35.4078,35.40779l0,212.44678a35.40779,35.40779 0 1 1 -70.8156,0l0,-177.03898l-177.03898,0a35.40779,35.40779 0 0 1 -35.40779,-35.40779zm272.88789,-25.03331a35.40779,35.40779 0 0 1 0,50.10203l-150.23528,150.19986a424.89355,424.89355 0 0 1 -600.87029,0a35.40779,35.40779 0 1 1 50.06663,-50.06663a354.07796,354.07796 0 0 0 500.73704,0l150.23528,-150.19986a35.40779,35.40779 0 0 1 50.06663,0l0,-0.03541z\" id=\"svg_9\" />\n    </g>\n  </svg>\n);\nconst TargetAntiClockwiseIcon = () => <Icon component={TargetAntiClockwise} />;\nconst TargetClockwise = () => (\n  <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g>\n      <title>Layer 1</title>\n      <path stroke=\"null\" id=\"svg_1\" d=\"m939.67571,145.14783a35.36938,35.36938 0 0 1 35.36939,35.36938l0,212.21628a35.36938,35.36938 0 0 1 -35.36939,35.36938l-212.21628,0a35.36938,35.36938 0 1 1 0,-70.73875l176.84691,0l0,-176.84691a35.36938,35.36938 0 0 1 35.36938,-35.36938zm-425.17531,18.92262a353.6938,353.6938 0 0 0 -250.09688,103.59692a35.36938,35.36938 0 1 1 -50.0123,-50.0123a424.43256,424.43256 0 0 1 600.21837,0l150.07228,150.0369a35.36938,35.36938 0 0 1 -50.0123,50.04767l-150.10765,-150.07227a353.6938,353.6938 0 0 0 -250.06151,-103.59692zm-460.5447,478.72456a35.36938,35.36938 0 0 1 35.36939,-35.36938l212.21628,0a35.36938,35.36938 0 1 1 0,70.73875l-176.84691,0l0,176.84691a35.36938,35.36938 0 1 1 -70.73876,0l0,-212.21628zm10.36323,-25.00615a35.36938,35.36938 0 0 1 50.0123,0l150.07228,150.07227a353.65843,353.65843 0 0 0 500.19376,0a35.36938,35.36938 0 0 1 50.0123,50.0123a424.43256,424.43256 0 0 1 -600.21837,0l-150.07228,-150.0369a35.36938,35.36938 0 0 1 0,-50.04767z\" fill=\"#333333\" />\n      <text fontWeight=\"normal\" transform=\"matrix(14.5178 0 0 14.5178 -4468.57 -5462.42)\" stroke=\"#000\" textAnchor=\"start\" fontFamily=\"Noto Sans JP\" fontSize=\"30\" id=\"svg_2\" y=\"421.46735\" x=\"334.09207\" fill=\"#000000\">T</text>\n    </g>\n  </svg>\n);\nconst TargetClockwiseIcon = () => <Icon component={TargetClockwise} />;\n\nexport default class App extends React.Component {\n  public container: HTMLDivElement\n  public stencilContainer: HTMLDivElement\n  public graph: Graph\n  public child: ConfigPanel\n\n  componentDidMount() {\n    this.child.setParent(this)\n    this.graph = new Graph({\n      keyboard: {\n        enabled: true,\n      },\n      history: true,\n      container: this.container,\n      // grid: true,\n      resizing: {\n        enabled: true,\n        allowReverse: false,\n      },\n      clipboard: {\n        enabled: true,\n        useLocalStorage: true,\n      },\n      connecting: {\n        snap: true,\n        highlight: true,\n        allowBlank: false,\n        allowLoop: false,\n        allowEdge: false,\n        allowMulti: false,\n        allowNode: false,\n        allowPort: true,\n      },\n      highlighting: {\n        embedding: {\n          name: 'stroke',\n          args: {\n            padding: -1,\n            attrs: {\n              stroke: '#73d13d',\n            },\n          },\n        },\n      },\n      snapline: { enabled: true, sharp: true, },\n      selecting: { enabled: true, },\n      scroller: {\n        enabled: true,\n        pageVisible: false,\n        pageBreak: false,\n        pannable: true,\n      }\n    })\n\n    this.graph.bindKey('alt+shift+b', this.onClickBack)\n    this.graph.bindKey('alt+shift+f', this.onClickFront)\n\n    this.graph.bindKey('alt+shift+=', this.onClickZoomIn)\n    this.graph.bindKey('alt+shift+-', this.onClickZoomOut)\n\n    this.graph.bindKey('delete', this.onClickDelete)\n    this.graph.bindKey('meta+c', this.onClickCopy)\n    this.graph.bindKey('ctrl+c', this.onClickCopy)\n    this.graph.bindKey('meta+v', this.onClickPaste)\n    this.graph.bindKey('ctrl+v', this.onClickPaste)\n\n    this.graph.bindKey('meta+z', this.onClickUndo)\n    this.graph.bindKey('ctrl+z', this.onClickUndo)\n    this.graph.bindKey('meta+shift+z', this.onClickRedo)\n    this.graph.bindKey('ctrl+shift+z', this.onClickRedo)\n\n    this.graph.bindKey('alt+shift+s', this.onClickToJPG)\n    this.graph.bindKey('alt+shift+c', this.onClickCenter)\n    this.graph.bindKey('alt+shift+a', this.onClickAdjust)\n\n    this.registerSider()\n    this.graph.zoomToFit({ padding: 10, maxScale: 1 })\n    this.graph.centerContent()\n    hidePorts(false)\n    registerEvents(this.graph, this.child)\n    this.graph.unselect(this.graph.getCells())\n    // this.graph.fromJSON()\n  }\n\n  registerSider = () => {\n    const slider = new Stencil({\n      title: '',\n      target: this.graph,\n      stencilGraphWidth: Math.floor(window.innerWidth * 0.12),\n      stencilGraphHeight: 700,\n      stencilGraphPadding: 0,\n      // stencilGraphOptions: {},\n      layoutOptions: {\n        columns: 1,\n        marginY: 20,\n        // resizeToFit: true,\n        marginX: Math.floor(window.innerWidth * 0.01),\n        dx: 0,\n        dy: 0,\n        center: true,\n        rowHeight: 95,\n        columnWidth: Math.floor(window.innerWidth * 0.10),\n      },\n      groups: [\n        {\n          name: 'group1',\n          title: 'VQFlow',\n          collapsable: false,\n        },\n      ],\n      getDropNode(draggingNode, options) {\n        const dropNode = draggingNode.clone()\n        dropNode.setZIndex(1)\n        return dropNode\n      },\n      getDragNode(node) {\n        node = node.clone()\n        if (node instanceof Group) {\n          node.setAttrByPath('label/text', '')\n          node.setSize({ width: 190, height: 108 })\n        } else if (node.shape === 'subquery-node') {\n          node.setAttrByPath('rank/text', '')\n          node.setAttrByPath('name/text', '')\n          node.setAttrByPath('show/text', '')\n          node.setSize({ width: 150, height: 78 })\n        } else if (node.shape === 'reuse-node') {\n          node.setAttrByPath('rank/text', 'REUSE')\n          node.setAttrByPath('name/text', '')\n          node.setSize({ width: 190, height: 58 })\n        }\n        return node\n      },\n    })\n\n    this.graph.cleanClipboard()\n    this.graph.cleanHistory()\n\n    this.stencilContainer.appendChild(slider.container)\n\n    const component1 = createGroup('group1', 170, 70, '#eeeeee', 'Requirement')\n    const component2 = createNode('node1', 140, 70, 'Table', 'Filter', 'Columns', this.graph)\n    const component3 = createReuseNode('reusenode', 170, 49, 'REUSE', 'Requirement', 'Columns', this.graph)\n    slider.load([component1, component2, component3], 'group1')\n  }\n\n  refContainer = (container: HTMLDivElement) => {\n    this.container = container\n  }\n  refStencil = (container: HTMLDivElement) => {\n    this.stencilContainer = container\n  }\n  onClickUndo = () => {\n    this.graph.undo()\n  }\n  onClickRedo = () => {\n    this.graph.redo()\n  }\n  onClickZoomIn = () => {\n    this.graph.zoom(0.1)\n  }\n  onClickZoomOut = () => {\n    this.graph.zoom(-0.1)\n  }\n  onClickFront = () => {\n    const cell = getSelectedCell(this.graph)\n    if (cell !== null) {\n      cell.toFront()\n    }\n  }\n  onClickBack = () => {\n    const cell = getSelectedCell(this.graph)\n    if (cell !== null) {\n      cell.toBack()\n    }\n  }\n\n  onClickDelete = () => {\n    this.child.setState({ editType: 'GRAPH' })\n    const cells = this.graph.getSelectedCells()\n    if (cells && cells.length) {\n      this.graph.removeCells(cells)\n    } else {\n      message.error('Please select components firstly')\n    }\n  }\n  private copyCells: Cell[]\n  onClickCopy = () => {\n    const cells = this.graph.getSelectedCells()\n    if (cells && cells.length) {\n      for (var i = 0; i < cells.length; i++) {\n        if (cells[i] instanceof Edge) {\n          message.error('Edges cannot be copied!')\n          return\n        }\n      }\n      this.graph.copy(cells)\n      this.copyCells = cells\n      message.info('Component copied')\n    } else {\n      message.error('Please select components firstly')\n    }\n  }\n  onClickPaste = () => {\n    if (this.graph.isClipboardEmpty()) {\n      message.error('Clipboard is empty!')\n    } else {\n      let curY = -9999999\n      this.graph.getCells().forEach(element => {\n        if (element instanceof Node) {\n          const node = (element as Node)\n          const y = node.getPosition().y + node.getSize().height\n          if (y > curY) {\n            curY = y\n          }\n        }\n      });\n      let curYa = 9999999\n      this.copyCells.forEach(element => {\n        if (element instanceof Node) {\n          const node = (element as Node)\n          const y = node.getPosition().y\n          if (y < curYa) {\n            curYa = y\n          }\n        }\n      });\n\n      const cells = this.graph.paste({ offset: { dx: 0, dy: curY - curYa + 20 } })\n      let i = 0\n      for (i = 0; i < this.copyCells.length; i++) {\n        cells[i].setAttrs(this.copyCells[i].attrs)\n        // if (cells[i] instanceof Group) {\n        //   autoJustSizeOfSubRequirement(cells[i] as Group)\n        // } else {\n        //   autoJustSizeOfSubQuery(cells[i] as Node)\n        // }\n      }\n\n      this.graph.cleanSelection()\n      this.graph.select(cells)\n    }\n  }\n  onClickAdjust = () => {\n    const cells = this.graph.getSelectedCells()\n    if (cells && cells.length === 1) {\n      const node = cells[0]\n      if (!(node instanceof Group)) {\n        message.error('Please select a Requirements Module!')\n        return\n      }\n\n      const childs: Cell[] = []\n      const getChilds = (node: Cell) => {\n        const temp = node.getChildren()\n        temp?.forEach(test => {\n          childs.push(test)\n          getChilds(test)\n        })\n      }\n      getChilds(node)\n      if (childs.length > 0) {\n        let newTopLeftX = 99999999\n        let newTopLeftY = 99999999\n        let newBottomRightX = -99999999\n        let newBottomRightY = -99999999\n        childs.forEach(element => {\n          const temp = (element as Node)\n          const test = temp.getBBox().inflate(10)\n          if (test.topLeft.x < newTopLeftX) newTopLeftX = test.topLeft.x\n          if (test.topLeft.y < newTopLeftY) newTopLeftY = test.topLeft.y - 20\n          if (test.bottomRight.x > newBottomRightX) newBottomRightX = test.bottomRight.x\n          if (test.bottomRight.y > newBottomRightY) newBottomRightY = test.bottomRight.y\n        });\n        node.setPosition(newTopLeftX, newTopLeftY)\n        node.setSize(newBottomRightX - newTopLeftX, newBottomRightY - newTopLeftY)\n        autoJustSizeOfSubRequirement(node)\n      } else {\n        autoJustSizeOfSubRequirement(node)\n      }\n    } else {\n      message.info('Please select a Requirements Module')\n    }\n  }\n\n  onClickToJPG = () => {\n    const vb = this.graph.getContentBBox()\n    const vbr = Rectangle.create(vb.x, vb.y, vb.width, vb.height)\n\n    this.graph.toSVG((dataUri: string) => {\n      // 下载\n      DataUri.downloadDataUri(DataUri.svgToDataUrl(dataUri), 'VQFlow_Graph.svg')\n    }, {\n      copyStyles: true,\n      viewBox: vbr,\n    })\n  }\n  onClickToJSON = () => {\n    const blob = new Blob([JSON.stringify(this.graph.toJSON())], { type: 'text/plain' })\n    DataUri.downloadBlob(blob, 'VQFlow_Graph.json')\n    message.info(JSON.stringify('Saved', null, 2))\n  }\n  onClickCenter = () => {\n    this.graph.zoomToFit({ padding: 10, maxScale: 1 })\n    this.graph.centerContent()\n  }\n\n  onClickGetClockwisePortOfSourceNode = () => {\n    const cell = getSelectedCell(this.graph)\n    if (cell !== null) {\n      if (cell instanceof Edge) {\n        let edge = cell\n        const sourceNode = edge.getSourceNode()\n        const sourcePortId = edge.getSourcePortId()\n        const targetPortId = getPortIdClockwise(sourcePortId as string)\n        edge.setSource({ cell: sourceNode!.id, port: targetPortId })\n      } else {\n        message.error('Please select one edge firstly')\n      }\n    }\n  }\n  onClickGetClockwisePortOfTargetNode = () => {\n    const cell = getSelectedCell(this.graph)\n    if (cell !== null) {\n      if (cell instanceof Edge) {\n        let edge = cell\n        const sourceNode = edge.getTargetNode()\n        const sourcePortId = edge.getTargetPortId()\n        const targetPortId = getPortIdClockwise(sourcePortId as string)\n        edge.setTarget({ cell: sourceNode!.id, port: targetPortId })\n      } else {\n        message.error('Please select one edge firstly')\n      }\n    }\n  }\n  onClickGetAntiClockwisePortOfSourceNode = () => {\n    const cell = getSelectedCell(this.graph)\n    if (cell !== null) {\n      if (cell instanceof Edge) {\n        let edge = cell\n        const sourceNode = edge.getSourceNode()\n        const sourcePortId = edge.getSourcePortId()\n        const targetPortId = getPortIdAnticlockwise(sourcePortId as string)\n        edge.setSource({ cell: sourceNode!.id, port: targetPortId })\n      } else {\n        message.error('Please select one edge firstly')\n      }\n    }\n  }\n  onClickGetAntiClockwisePortOfTargetNode = () => {\n    const cell = getSelectedCell(this.graph)\n    if (cell !== null) {\n      if (cell instanceof Edge) {\n        let edge = cell\n        const sourceNode = edge.getTargetNode()\n        const sourcePortId = edge.getTargetPortId()\n        const targetPortId = getPortIdAnticlockwise(sourcePortId as string)\n        edge.setTarget({ cell: sourceNode!.id, port: targetPortId })\n      } else {\n        message.error('Please select one edge firstly')\n      }\n    }\n  }\n  bindChild = (c: ConfigPanel) => {\n    this.child = c\n  }\n\n  render() {\n    (document.getElementById(\"root\") as HTMLDivElement).style.height = window.innerHeight + 'px'\n\n    return (\n      <div className=\"wrap\">\n        <div className=\"content\" >\n          <div id=\"stencil\" className=\"sider\" ref={this.refStencil} />\n          <div className=\"panel\">\n            <div className=\"toolbar\">\n              <Toolbar\n                hoverEffect={true}\n                size=\"big\" >\n                <ToolGroup>\n                  <Item\n                    name=\"Copy\"\n                    tooltip=\"Copy\"// (Meta+C / Ctrl+C)\"\n                    icon={<CopyOutlined />}\n                    onClick={this.onClickCopy}\n                  />\n                  <Item\n                    name=\"Paste\"\n                    tooltip=\"Paste\" // (Meta+V / Ctrl+V)\"\n                    icon={<SnippetsOutlined />}\n                    onClick={this.onClickPaste}\n                  />\n                  <Item\n                    name=\"Delete\"\n                    tooltip=\"Delete\" // (Delete)\"\n                    icon={<DeleteOutlined />}\n                    onClick={this.onClickDelete}\n                  />\n                </ToolGroup>\n                <ToolGroup>\n                  <Item\n                    name=\"Undo\"\n                    tooltip=\"Undo (Meta+Z / Ctrl+Z)\"\n                    icon={<UndoOutlined />}\n                    onClick={this.onClickUndo}\n                  />\n                  <Item\n                    name=\"redo\"\n                    tooltip=\"Redo (Meta+Shift+Z / Ctrl+Shift+Z)\"\n                    icon={<RedoOutlined />}\n                    onClick={this.onClickRedo}\n                  />\n                </ToolGroup>\n                <ToolGroup>\n                  <Item\n                    name=\"Bring to Front\"\n                    tooltip=\"Bring to Front\" // (Alt+Shift+F)\"\n                    icon={<VerticalAlignTopOutlined />}\n                    onClick={this.onClickFront}\n                  />\n                  <Item\n                    name=\"Send to Back\"\n                    tooltip=\"Send to Back\" // (Alt+Shift+B)\"\n                    icon={<VerticalAlignBottomOutlined />}\n                    onClick={this.onClickBack}\n                  />\n                </ToolGroup>\n                <ToolGroup>\n                  <Item\n                    name=\"Zoom In\"\n                    tooltip=\"Zoom In (Alt+Shift+=)\"\n                    icon={<ZoomInOutlined />}\n                    onClick={this.onClickZoomIn}\n                  />\n                  <Item\n                    name=\"Zoom Out\"\n                    tooltip=\"Zoom Out (Alt+Shift+-)\"\n                    icon={<ZoomOutOutlined />}\n                    onClick={this.onClickZoomOut}\n                  />\n                </ToolGroup>\n                <ToolGroup>\n                  <Item\n                    name=\"Center\"\n                    tooltip=\"Center (Alt+Shift+C)\"\n                    icon={<CompressOutlined />}\n                    onClick={this.onClickCenter}\n                  />\n                  <Item\n                    name=\"Adjust Size\"\n                    tooltip=\"Adjust the Size\" // (Alt+Shift+A)\"\n                    icon={<ShrinkOutlined />}\n                    onClick={this.onClickAdjust}\n                  />\n                </ToolGroup>\n                <ToolGroup>\n                  <Item\n                    name=\"Move source port clockwise\"\n                    tooltip=\"Move source port clockwise\"\n                    icon={<SourceClockwiseIcon />}\n                    onClick={this.onClickGetClockwisePortOfSourceNode}\n                  />\n                  <Item\n                    name=\"Move source port anticlockwise\"\n                    tooltip=\"Move source port anticlockwise\"\n                    icon={<SourceAntiClockwiseIcon />}\n                    onClick={this.onClickGetAntiClockwisePortOfSourceNode}\n                  />\n                  <Item\n                    name=\"Move target port clockwise\"\n                    tooltip=\"Move target port clockwise\"\n                    icon={<TargetClockwiseIcon />}\n                    onClick={this.onClickGetClockwisePortOfTargetNode}\n                  />\n                  <Item\n                    name=\"Move target port anticlockwise\"\n                    tooltip=\"Move target port anticlockwise\"\n                    icon={<TargetAntiClockwiseIcon />}\n                    onClick={this.onClickGetAntiClockwisePortOfTargetNode}\n                  />\n                </ToolGroup>\n                <ToolGroup>\n                  <Item\n                    name=\"Save to JSON\"\n                    tooltip=\"Save to JSON\"\n                    icon={<FileOutlined />}\n                    onClick={this.onClickToJSON}\n                  />\n                  <Item\n                    name=\"Save to SVG\"\n                    tooltip=\"Save to SVG\" // (Alt+Shift+S)\"\n                    icon={<FileImageOutlined />}\n                    onClick={this.onClickToJPG}\n                  />\n                </ToolGroup>\n              </Toolbar>\n            </div>\n            <div id=\"container\" ref={this.refContainer}></div>\n          </div>\n          <div className='config'>\n            <ConfigPanel onRef={this.bindChild} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index'\nimport \"antd/dist/antd.css\"\n\nReactDOM.render(\n    <App />, document.getElementById('root'),\n)\n"],"sourceRoot":""}